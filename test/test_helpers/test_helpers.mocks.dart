// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_architecture_app/test/test_helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:dio/src/adapter.dart' as _i7;
import 'package:dio/src/cancel_token.dart' as _i17;
import 'package:dio/src/dio.dart' as _i11;
import 'package:dio/src/dio_mixin.dart' as _i9;
import 'package:dio/src/options.dart' as _i6;
import 'package:dio/src/response.dart' as _i10;
import 'package:dio/src/transformer.dart' as _i8;
import 'package:flutter/foundation.dart' as _i16;
import 'package:flutter_architecture_app/features/authentication/domain/entities/user.dart'
    as _i2;
import 'package:flutter_architecture_app/features/authentication/domain/repositories/auth_repository.dart'
    as _i3;
import 'package:flutter_architecture_app/features/authentication/infrastructure/auth_repository_factory.dart'
    as _i13;
import 'package:flutter_architecture_app/features/work_calendar/domain/entities/work_event.dart'
    as _i4;
import 'package:flutter_architecture_app/features/work_calendar/domain/repositories/work_calendar_repository.dart'
    as _i14;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthRepository_1 extends _i1.SmartFake
    implements _i3.AuthRepository {
  _FakeAuthRepository_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkEvent_2 extends _i1.SmartFake implements _i4.WorkEvent {
  _FakeWorkEvent_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSOptions_3 extends _i1.SmartFake implements _i5.IOSOptions {
  _FakeIOSOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_4 extends _i1.SmartFake
    implements _i5.AndroidOptions {
  _FakeAndroidOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_5 extends _i1.SmartFake implements _i5.LinuxOptions {
  _FakeLinuxOptions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_6 extends _i1.SmartFake
    implements _i5.WindowsOptions {
  _FakeWindowsOptions_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_7 extends _i1.SmartFake implements _i5.WebOptions {
  _FakeWebOptions_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsOptions_8 extends _i1.SmartFake implements _i5.MacOsOptions {
  _FakeMacOsOptions_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_9 extends _i1.SmartFake implements _i6.BaseOptions {
  _FakeBaseOptions_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_10 extends _i1.SmartFake
    implements _i7.HttpClientAdapter {
  _FakeHttpClientAdapter_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_11 extends _i1.SmartFake implements _i8.Transformer {
  _FakeTransformer_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_12 extends _i1.SmartFake implements _i9.Interceptors {
  _FakeInterceptors_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_13<T1> extends _i1.SmartFake implements _i10.Response<T1> {
  _FakeResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_14 extends _i1.SmartFake implements _i11.Dio {
  _FakeDio_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i2.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i12.Stream<_i2.User?>.empty(),
          )
          as _i12.Stream<_i2.User?>);

  @override
  _i12.Future<_i2.User> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i12.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i12.Future<_i2.User>);

  @override
  _i12.Future<_i2.User> registerWithEmailAndPassword({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#registerWithEmailAndPassword, [], {
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i12.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#registerWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                  #name: name,
                }),
              ),
            ),
          )
          as _i12.Future<_i2.User>);

  @override
  _i12.Future<void> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<_i2.User?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i12.Future<_i2.User?>.value(),
          )
          as _i12.Future<_i2.User?>);

  @override
  _i12.Future<String?> getAuthToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAuthToken, []),
            returnValue: _i12.Future<String?>.value(),
          )
          as _i12.Future<String?>);

  @override
  _i12.Future<void> storeAuthToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#storeAuthToken, [token]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> removeAuthToken() =>
      (super.noSuchMethod(
            Invocation.method(#removeAuthToken, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i12.Future<bool>.value(false),
          )
          as _i12.Future<bool>);

  @override
  _i12.Future<void> sendEmailVerification() =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<_i2.User> verifyEmail(String? verificationCode) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmail, [verificationCode]),
            returnValue: _i12.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#verifyEmail, [verificationCode]),
              ),
            ),
          )
          as _i12.Future<_i2.User>);

  @override
  _i12.Future<_i2.User> updateProfile({
    String? name,
    String? phoneNumber,
    String? profileImageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #name: name,
              #phoneNumber: phoneNumber,
              #profileImageUrl: profileImageUrl,
            }),
            returnValue: _i12.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#updateProfile, [], {
                  #name: name,
                  #phoneNumber: phoneNumber,
                  #profileImageUrl: profileImageUrl,
                }),
              ),
            ),
          )
          as _i12.Future<_i2.User>);

  @override
  _i12.Future<void> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);
}

/// A class which mocks [AuthRepositoryFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryFactory extends _i1.Mock
    implements _i13.AuthRepositoryFactory {
  MockAuthRepositoryFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthRepository getAuthRepository() =>
      (super.noSuchMethod(
            Invocation.method(#getAuthRepository, []),
            returnValue: _FakeAuthRepository_1(
              this,
              Invocation.method(#getAuthRepository, []),
            ),
          )
          as _i3.AuthRepository);
}

/// A class which mocks [WorkCalendarRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkCalendarRepository extends _i1.Mock
    implements _i14.WorkCalendarRepository {
  MockWorkCalendarRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<List<_i4.WorkEvent>> getEventsInRange(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEventsInRange, [startDate, endDate]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getEventsForDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getEventsForDate, [date]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<_i4.WorkEvent> createEvent(_i4.WorkEvent? event) =>
      (super.noSuchMethod(
            Invocation.method(#createEvent, [event]),
            returnValue: _i12.Future<_i4.WorkEvent>.value(
              _FakeWorkEvent_2(this, Invocation.method(#createEvent, [event])),
            ),
          )
          as _i12.Future<_i4.WorkEvent>);

  @override
  _i12.Future<_i4.WorkEvent> updateEvent(_i4.WorkEvent? event) =>
      (super.noSuchMethod(
            Invocation.method(#updateEvent, [event]),
            returnValue: _i12.Future<_i4.WorkEvent>.value(
              _FakeWorkEvent_2(this, Invocation.method(#updateEvent, [event])),
            ),
          )
          as _i12.Future<_i4.WorkEvent>);

  @override
  _i12.Future<void> deleteEvent(String? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEvent, [eventId]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<_i4.WorkEvent?> getEvent(String? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#getEvent, [eventId]),
            returnValue: _i12.Future<_i4.WorkEvent?>.value(),
          )
          as _i12.Future<_i4.WorkEvent?>);

  @override
  _i12.Future<List<_i4.WorkEvent>> searchEvents(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchEvents, [query]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getUpcomingEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getUpcomingEvents, []),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getEventsByType(
    _i4.WorkEventType? eventType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEventsByType, [eventType]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getTodaysEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getTodaysEvents, []),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getWeekEvents(DateTime? weekStart) =>
      (super.noSuchMethod(
            Invocation.method(#getWeekEvents, [weekStart]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getMonthEvents(DateTime? monthStart) =>
      (super.noSuchMethod(
            Invocation.method(#getMonthEvents, [monthStart]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<List<_i4.WorkEvent>> getConflictingEvents(
    DateTime? startTime,
    DateTime? endTime,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getConflictingEvents, [startTime, endTime]),
            returnValue: _i12.Future<List<_i4.WorkEvent>>.value(
              <_i4.WorkEvent>[],
            ),
          )
          as _i12.Future<List<_i4.WorkEvent>>);

  @override
  _i12.Future<String> exportEvents(List<_i4.WorkEvent>? events) =>
      (super.noSuchMethod(
            Invocation.method(#exportEvents, [events]),
            returnValue: _i12.Future<String>.value(
              _i15.dummyValue<String>(
                this,
                Invocation.method(#exportEvents, [events]),
              ),
            ),
          )
          as _i12.Future<String>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i5.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_3(this, Invocation.getter(#iOptions)),
          )
          as _i5.IOSOptions);

  @override
  _i5.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_4(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i5.AndroidOptions);

  @override
  _i5.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_5(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i5.LinuxOptions);

  @override
  _i5.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_6(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i5.WindowsOptions);

  @override
  _i5.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_7(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i5.WebOptions);

  @override
  _i5.MacOsOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeMacOsOptions_8(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i5.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i16.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i16.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<void> write({
    required String? key,
    required String? value,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<String?> read({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<String?>.value(),
          )
          as _i12.Future<String?>);

  @override
  _i12.Future<bool> containsKey({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<bool>.value(false),
          )
          as _i12.Future<bool>);

  @override
  _i12.Future<void> delete({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<Map<String, String>> readAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i12.Future<Map<String, String>>);

  @override
  _i12.Future<void> deleteAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i12.Future<bool?>.value(),
          )
          as _i12.Future<bool?>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i11.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_9(this, Invocation.getter(#options)),
          )
          as _i6.BaseOptions);

  @override
  _i7.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_10(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i7.HttpClientAdapter);

  @override
  _i8.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_11(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i8.Transformer);

  @override
  _i9.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_12(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i9.Interceptors);

  @override
  set options(_i6.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i7.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  set transformer(_i8.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<_i10.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i17.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i12.Future<_i10.Response<dynamic>>.value(
              _FakeResponse_13<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<dynamic>>);

  @override
  _i12.Future<_i10.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    _i17.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i12.Future<_i10.Response<dynamic>>.value(
              _FakeResponse_13<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<dynamic>>);

  @override
  _i12.Future<_i10.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i17.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i17.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i12.Future<_i10.Response<T>> fetch<T>(_i6.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i12.Future<_i10.Response<T>>.value(
              _FakeResponse_13<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i12.Future<_i10.Response<T>>);

  @override
  _i11.Dio clone({
    _i6.BaseOptions? options,
    _i9.Interceptors? interceptors,
    _i7.HttpClientAdapter? httpClientAdapter,
    _i8.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_14(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i11.Dio);
}
